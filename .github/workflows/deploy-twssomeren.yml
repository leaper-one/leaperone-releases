name: Deploy TwoSOMEren

on:
  repository_dispatch:
    types: [deploy-twssomeren]


env:
  DOCKERHUB: registry.cn-guangzhou.aliyuncs.com/leaperone/2someone
  BUILD_DATE: ${{ format('YYYYMMDD', github.event.client_payload.timestamp || github.event.timestamp) }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          repository: leaper-one/2SOMEren
          ref: ${{ github.event.client_payload.ref || github.ref }}

      - name: Check Skip CI
        run: |
          if grep -q "noci" <<< "${{ github.event.client_payload.message || '' }}"; then
            echo "跳过构建: commit message 包含 'noci'"
            exit 78
          fi

      - name: Login to Aliyun Docker Registry
        uses: docker/login-action@v3
        with:
          registry: registry.cn-guangzhou.aliyuncs.com
          username: ${{ secrets.ALIYUN_DOCKER_USERNAME }}
          password: ${{ secrets.ALIYUN_DOCKER_PASSWORD }}

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose-plugin
          docker compose version

      - name: Build Docker images
        run: docker compose -f ./docker/docker-compose-build.yml build

      - name: Tag and Push Docker images
        run: |
          docker tag ${DOCKERHUB}:web-${GITHUB_REF_NAME}-latest-${GITHUB_RUN_NUMBER} ${DOCKERHUB}:web-${GITHUB_REF_NAME}-latest
          docker push ${DOCKERHUB}:web-${GITHUB_REF_NAME}-latest

      - name: Run Database Migrations
        if: github.ref == 'refs/heads/main'
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: |
          npm install -g prisma --registry https://registry.npmmirror.com
          export TWOSOMEREN_DATABASE_URL="${{ secrets.TWOSOMEREN_DATABASE_URL }}"
          export TWOSOMEREN_BILI_DATABASE_URL="${{ secrets.TWOSOMEREN_BILI_DATABASE_URL }}"
          sh prisma/migrate_deploy.sh

      - name: Deploy to Production
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.ALIYUN_CN_HOST }}
          username: ${{ secrets.ALIYUN_CN_USERNAME }}
          port: ${{ secrets.ALIYUN_CN_PORT }}
          key: ${{ secrets.ALIYUN_CN_SSH_PRIVATE_KEY }}
          script: ${{ secrets.DEPLOY_TWOSOMEREN_SCRIPT }}

      - name: Notify Feishu
        uses: foxundermoon/feishu-action@v2
        if: always()
        with:
          url: ${{ secrets.FEISHU_WEBHOOK_URL }}
          msg_type: card
          content: |
            header:
              template: ${{ job.status == 'success' && 'green' || 'red' }}
              title:
                content: "${{ job.status == 'success' && '🚀 部署成功啦！' || '❌ 部署失败了！' }}"
                tag: plain_text
            elements:
            - tag: div
              text:
                content: "🌟 部署详情\n\n**分支**：${{ github.event.client_payload.ref }}\n**构建编号**：#${{ github.run_number }}\n**提交信息**：${{ github.event.client_payload.message }}\n**提交者**：${{ github.event.client_payload.author }}\n**构建时间**：${{ env.BUILD_DATE }}"
                tag: lark_md
            - tag: hr
            - tag: div
              text:
                content: "${{ job.status == 'success' && '✨ 部署已经完成，快去看看新功能吧！' || '😱 糟糕！部署出现了问题，请及时检查！' }}"
                tag: lark_md
            - tag: action
              actions:
                - tag: button
                  text:
                    content: "查看详情 👉"
                    tag: plain_text
                  url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  type: "primary"
